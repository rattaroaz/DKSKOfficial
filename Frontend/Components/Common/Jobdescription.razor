<h3 class="text-center my-4">Job Description</h3>

<div class="row mb-3">
    @foreach (var job in jobs)
    {
        <div class="row">
            <div class="form-group col-md-8">
                <label for="jobDescription" class="form-label">Job Type*</label>
                <RadzenDropDown @bind-Value="job.JobType" Data="options" Placeholder="Select Job Type"
                                AllowClear="true" Class="w-100" />
            </div>
            <div class="col-md-2 my-4">
                <RadzenButton Text="Remove" Icon="close" Class="btn-danger" Click="(() => RemoveJob(job))" />
            </div>
        </div>
    }

    <div class="row mb-3">
        <div class="col-md-12 my-3">
            <RadzenButton Text="Add Another Option" Icon="add" Class="btn-primary my-3" Click="AddAnotherOption" />
        </div>
    </div>
</div>

@code {
    private string? selectedValue;
    private List<string> options = new List<string>
    {
        "interior walls, closet inside, ceiling",
        "walls, closet inside",
        "base boards",
        "kitchen cabinet - inside and outside",
        "all enamel surfaces including doors, door frames, kitchen, bathrooms",
        "2 tone colors: navaho white, swiss coffee",
        "2 tone colors: BM1520(Hushed Hue), swiss coffee",
        "Balcony floor",
        "Cover flooring and plastic",
        "Ceiling"
    };

    private List<Job> jobs = new List<Job>();

    // Model for job description and material costs
    private class Job
    {
        public string JobType { get; set; }
        public string NumberOfJobs { get; set; }
    }

    // Add new job form fields
    private void AddAnotherOption()
    {
        jobs.Add(new Job());
    }

    // Remove job form fields
    private void RemoveJob(Job job)
    {
        jobs.Remove(job);
    }
}
