@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

<div class="page">
    @if (_isInitialized)
    {
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <article class="content px-4">

                    @Body
            </article>
        </main>
    }
    else
    {
        <p>Loading...</p>
    }

</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code {
    private bool _isInitialized;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Avoid making JS interop calls during prerendering
            var token = await LocalStorageService.GetItemAsync<string>("authToken");

            // Redirect if the token is not available
            if (string.IsNullOrEmpty(token))
            {
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                _isInitialized = true;
            }

            // Optionally, call StateHasChanged() to re-render the component
            StateHasChanged();
        }
    }
}